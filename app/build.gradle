plugins {
    id 'com.android.application'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

def keystorePropertiesFile = rootProject.file("./keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "ru.luckycactus.steamroulette"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 16
        versionName "1.4.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
    }
    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def steamWebApiKey = properties.getProperty("steam_web_api_key", "")

        it.buildConfigField 'String', "STEAM_WEB_API_KEY", steamWebApiKey
        it.resValue 'string', "steam_web_api_key", steamWebApiKey
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildFeatures {
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    signingConfigs {
        release {
            try {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            } catch (ex) {
                throw new InvalidUserDataException("You should define keystore.properties.")
            }
        }
    }
    kapt {
        arguments {
            arg("dagger.formatGeneratedSource", "disabled")
            arg("dagger.gradle.incremental", "enabled")
        }
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 500)
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.time.ExperimentalTime"]
    kotlinOptions.freeCompilerArgs += ['-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"

    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "androidx.work:work-runtime-ktx:2.4.0"

    implementation "androidx.room:room-runtime:2.3.0-alpha04"
    kapt "androidx.room:room-compiler:2.3.0-alpha04"
    implementation "androidx.room:room-ktx:2.3.0-alpha04"

    implementation "androidx.paging:paging-runtime-ktx:3.0.0-alpha12"
    testImplementation "androidx.paging:paging-common-ktx:3.0.0-alpha12"

    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-rc03'

    implementation "androidx.core:core-ktx:1.3.2"
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'com.google.android.material:material:1.3.0-rc01'

    implementation 'androidx.palette:palette-ktx:1.0.0'

    implementation "androidx.dynamicanimation:dynamicanimation:1.0.0"

    implementation 'com.google.android.play:core-ktx:1.8.1'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation "com.squareup.moshi:moshi:1.9.2"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.9.2"
    kaptTest "com.squareup.moshi:moshi-kotlin-codegen:1.9.2"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    //implementation 'com.squareup.moshi:moshi-adapters:1.9.2'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0'
    implementation 'com.github.stfalcon:stfalcon-imageviewer:1.0.0'

    implementation "androidx.browser:browser:1.3.0"

    implementation 'jp.wasabeef:glide-transformations:4.1.0'

    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.3.0'
    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.1'

    implementation "com.google.dagger:hilt-android:2.31.2-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.31.2-alpha"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    implementation 'androidx.hilt:hilt-work:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    implementation 'ru.terrakok.cicerone:cicerone:5.1.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    debugImplementation 'com.facebook.stetho:stetho:1.5.1'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0'

    testImplementation 'junit:junit:4.13.1'
    testImplementation "androidx.test:core:1.3.0"
    androidTestImplementation "androidx.test:core:1.3.0"
    testImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation "io.mockk:mockk:1.10.0"
    androidTestImplementation "io.mockk:mockk:1.10.0"
    testImplementation "org.assertj:assertj-core:3.18.1"
    androidTestImplementation "org.assertj:assertj-core:3.18.1"
}

apply plugin: 'com.google.gms.google-services'
